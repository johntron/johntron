@startmindmap Software design

* Software design
** Clean code
*** Principles
**** SOLID
***** Single repsonsiblity:\n Change for only one actor
***** Open/closed:\n Extension 👍, modification 👎
***** Liskov substitution:\n Subtypes work in place of parents w/o changes
***** Interface segregation:\n Clients not forced to depend on unused methods
***** Dependency inversion:\n High-level modules depend on abstractions
** Architecture
*** Principles
**** Component cohesion
***** Reuse/release equivalence:\n Release things that are reused together (cohesion)
***** Common closure:\n Have one reason to change
***** Common reuse:\n Contain interdependent things - omit unused things

@endmindmap